



spring:
  datasource:
    dynamic: # 多数据源配置
      primary: master
      datasource:
        master:
#          name: qy-cloud
          url: jdbc:mysql://127.0.0.1:3306/$qy-cloud?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT&nullCatalogMeansCurrent=true
          driver-class-name: com.mysql.cj.jdbc.Driver
          username: ENC(gzt54DB7U6Wz8wLSMnq/vw==)
          password: ENC(pnkZloPhHbCSpEAKEepBVw==)
        slave_1:
          url: jdbc:mysql://192.168.100.16:3306/qy-cloud?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT&nullCatalogMeansCurrent=true
          driver-class-name: com.mysql.cj.jdbc.Driver
          username: ENC(gzt54DB7U6Wz8wLSMnq/vw==)
          password: ENC(pnkZloPhHbCSpEAKEepBVw==)
      druid: # Druid 【连接池】相关的全局配置
        initial-size: 5 # 初始连接数
        min-idle: 10 # 最小连接池数量
        max-active: 20 # 最大连接池数量
        max-wait: 600000 # 配置获取连接等待超时的时间，单位：毫秒
        time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位：毫秒
        min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位：毫秒
        max-evictable-idle-time-millis: 900000 # 配置一个连接在池中最大生存的时间，单位：毫秒
        validation-query: SELECT 1 FROM DUAL # 配置检测连接是否有效
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false

      # 数据源配置项
  autoconfigure:
    exclude:
      - com.alibaba.druid.spring.boot3.autoconfigure.DruidDataSourceAutoConfigure # 排除 Druid 的自动配置，使用 dynamic-datasource-spring-boot-starter 配置多数据源
#    druid: # Druid 【监控】相关的全局配置
#      web-stat-filter:
#        enabled: true
#      stat-view-servlet:
#        enabled: true
#        allow: # 设置白名单，不填则允许所有访问
#        url-pattern: /druid/*
#        login-username: # 控制台管理用户名和密码
#        login-password:
#      filter:
#        stat:
#          enabled: true
#          log-slow-sql: true # 慢 SQL 记录
#          slow-sql-millis: 100
#          merge-sql: true
#        wall:
#          config:
#            multi-statement-allow: true
  # Redis 配置。Redisson 默认的配置足够使用，一般不需要进行调优
#  redis:
#    host: 127.0.0.1 # 地址
#    port: 6379 # 端口
#    database: 1 # 数据库索引
#    password: 123456 # 密码，建议生产环境开启
# MyBatis Plus 的配置项
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。
  global-config:
    db-config:
      id-type: AUTO # “智能”模式，基于 IdTypeEnvironmentPostProcessor + 数据源的类型，自动适配成 AUTO、INPUT 模式。
      #      id-type: AUTO # 自增 ID，适合 MySQL 等直接自增的数据库
      #      id-type: INPUT # 用户输入 ID，适合 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库
      #      id-type: ASSIGN_ID # 分配 ID，默认使用雪花算法。注意，Oracle、PostgreSQL、Kingbase、DB2、H2 数据库时，需要去除实体类上的 @KeySequence 注解
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
    banner: false # 关闭控制台的 Banner 打印
  type-aliases-package: ${qycloud.info.base-package}.dao.entity
  encryptor:
    password: XDV71a+xqStEA3WH # 加解密的秘钥，可使用 https://www.imaegoo.com/2020/aes-key-generator/ 网站生成

qycloud:
  info:
    version: 1.0.0
    base-package: cn.windcoder.qy.module.system